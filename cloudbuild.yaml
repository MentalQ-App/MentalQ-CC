options:
  logging: CLOUD_LOGGING_ONLY

steps:
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Fetch .env File
    entrypoint: bash
    args:
      - '-c'
      - |
        mkdir -p /workspace
        gcloud secrets versions access latest --secret=mentalq-backend-env > /workspace/.env

  - name: 'gcr.io/cloud-builders/gcloud'
    id: Fetch Cloud Credentials
    entrypoint: bash
    args:
      - '-c'
      - |
        mkdir -p /workspace
        gcloud secrets versions access latest --secret=mentalq-backend-cloudcred > /workspace/cloud_cred.json

  - name: 'gcr.io/cloud-builders/gcloud'
    id: Fetch Firebase Credentials
    entrypoint: bash
    args:
      - '-c'
      - |
        mkdir -p /workspace
        gcloud secrets versions access latest --secret=mentalq-backend-firebasecred > /workspace/firebase_cred.json

  - name: 'gcr.io/cloud-builders/docker'
    id: Build Docker Image
    args:
      [
        'build',
        '--build-arg', 'mentalq-backend-env_PATH=/workspace/.env',  # Ensure this corresponds with your Dockerfile ARG
        '-t', 'asia-southeast2-docker.pkg.dev/mentalq-cloud/mentalq-backend/backend-api',
        '.'
      ]

  - name: 'gcr.io/cloud-builders/docker'
    id: Push Docker Image
    args:
      [
        'push',
        'asia-southeast2-docker.pkg.dev/mentalq-cloud/mentalq-backend/backend-api'
      ]

  - name: 'gcr.io/cloud-builders/gcloud'
    id: Deploy to Cloud Run
    args:
      [
        'run',
        'deploy',
        'mentalq-backend',
        '--image',
        'asia-southeast2-docker.pkg.dev/mentalq-cloud/mentalq-backend/backend-api',
        '--region',
        'asia-southeast2',
        '--platform',
        'managed',
        '--allow-unauthenticated',
        '--port=3000',  # Use port 3000 to match your app's config
        '--timeout',
        '600s',
        '--memory',
        '4Gi',
      ]

images:
  - 'asia-southeast2-docker.pkg.dev/mentalq-cloud/mentalq-backend/backend-api'
